// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly Button 1`] = `
<View
  accessible={true}
  clickable={false}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignSelf": "stretch",
      "backgroundColor": "#fff",
      "borderColor": "#007aff",
      "borderRadius": 5,
      "borderWidth": 1,
      "flex": 1,
      "marginLeft": 5,
      "marginRight": 5,
      "opacity": 1,
    }
  }
>
  <Text
    style={
      Object {
        "alignSelf": "center",
        "color": "#007aff",
        "fontSize": 16,
        "fontWeight": "600",
        "paddingBottom": 10,
        "paddingTop": 10,
      }
    }
  >
    Test
  </Text>
</View>
`;

exports[`renders correctly Card 1`] = `
<View
  style={
    Object {
      "borderBottomWidth": 0,
      "borderColor": "#ddd",
      "borderRadius": 2,
      "borderWidth": 1,
      "elevation": 1,
      "marginLeft": 5,
      "marginRight": 5,
      "marginTop": 10,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 2,
        "width": 0,
      },
      "shadowOpacity": 0.1,
      "shadowRadius": 2,
    }
  }
>
  Test
</View>
`;

exports[`renders correctly CardSection 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#fff",
        "borderBottomWidth": 1,
        "borderColor": "#ddd",
        "flexDirection": "row",
        "justifyContent": "flex-start",
        "padding": 5,
        "position": "relative",
      },
      undefined,
    ]
  }
>
  Test
</View>
`;

exports[`renders correctly ConfirmModal 1`] = `
<Modal
  animationType="fade"
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  transparent={true}
  visible={true}
>
  <View
    style={
      Object {
        "backgroundColor": "rgba(0, 0, 0, 0.75)",
        "flex": 1,
        "justifyContent": "center",
        "position": "relative",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#fff",
            "borderBottomWidth": 1,
            "borderColor": "#ddd",
            "flexDirection": "row",
            "justifyContent": "flex-start",
            "padding": 5,
            "position": "relative",
          },
          Object {
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        style={
          Object {
            "flex": 1,
            "fontSize": 18,
            "lineHeight": 40,
            "textAlign": "center",
          }
        }
      >
        Test
      </Text>
    </View>
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#fff",
            "borderBottomWidth": 1,
            "borderColor": "#ddd",
            "flexDirection": "row",
            "justifyContent": "flex-start",
            "padding": 5,
            "position": "relative",
          },
          undefined,
        ]
      }
    >
      <View
        accessible={true}
        clickable={false}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignSelf": "stretch",
            "backgroundColor": "#fff",
            "borderColor": "#007aff",
            "borderRadius": 5,
            "borderWidth": 1,
            "flex": 1,
            "marginLeft": 5,
            "marginRight": 5,
            "opacity": 1,
          }
        }
      >
        <Text
          style={
            Object {
              "alignSelf": "center",
              "color": "#007aff",
              "fontSize": 16,
              "fontWeight": "600",
              "paddingBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          Yes
        </Text>
      </View>
      <View
        accessible={true}
        clickable={false}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignSelf": "stretch",
            "backgroundColor": "#fff",
            "borderColor": "#007aff",
            "borderRadius": 5,
            "borderWidth": 1,
            "flex": 1,
            "marginLeft": 5,
            "marginRight": 5,
            "opacity": 1,
          }
        }
      >
        <Text
          style={
            Object {
              "alignSelf": "center",
              "color": "#007aff",
              "fontSize": 16,
              "fontWeight": "600",
              "paddingBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          No
        </Text>
      </View>
    </View>
  </View>
</Modal>
`;

exports[`renders correctly CustomDatePicker 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "flexDirection": "row",
      "height": 40,
    }
  }
>
  <Text
    style={
      Object {
        "flex": 1,
        "fontSize": 18,
        "paddingLeft": 20,
      }
    }
  />
  <View
    accessible={true}
    clickable={true}
    isTVSelectable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "width": 142,
        },
        Object {
          "width": 200,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 40,
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderColor": "#aaa",
              "borderWidth": 1,
              "flex": 1,
              "height": 40,
              "justifyContent": "center",
            },
            undefined,
            false,
            false,
          ]
        }
      >
        <Text
          allowFontScaling={true}
          style={
            Array [
              Object {
                "color": "#333",
              },
              undefined,
            ]
          }
        >
          02.09.2019
        </Text>
      </View>
      <Image
        source={
          Object {
            "testUri": "../../react-native-datepicker/date_icon.png",
          }
        }
        style={
          Array [
            Object {
              "height": 32,
              "marginLeft": 5,
              "marginRight": 5,
              "width": 32,
            },
            undefined,
          ]
        }
      />
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        supportedOrientations={
          Array [
            "portrait",
            "portrait-upside-down",
            "landscape",
            "landscape-left",
            "landscape-right",
          ]
        }
        transparent={true}
        visible={false}
      >
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            accessible={true}
            clickable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "flex-end",
                "backgroundColor": "#00000077",
                "flex": 1,
                "flexDirection": "row",
              }
            }
          >
            <View
              accessible={true}
              clickable={false}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#fff",
                    "height": 0,
                    "overflow": "hidden",
                  }
                }
              >
                <View
                  pointerEvents="auto"
                >
                  <View
                    style={
                      Array [
                        Object {
                          "borderTopColor": "#ccc",
                          "borderTopWidth": 1,
                          "marginTop": 42,
                        },
                        undefined,
                      ]
                    }
                  >
                    <RCTDatePicker
                      date={1567415643221}
                      mode="date"
                      onChange={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "height": 216,
                        }
                      }
                      timeZoneOffsetInMinutes={null}
                    />
                  </View>
                </View>
                <View
                  accessible={true}
                  clickable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "height": 42,
                        "justifyContent": "center",
                        "paddingHorizontal": 20,
                        "position": "absolute",
                        "top": 0,
                      },
                      Object {
                        "left": 0,
                      },
                      undefined,
                    ]
                  }
                >
                  <Text
                    allowFontScaling={true}
                    style={
                      Array [
                        Object {
                          "color": "#46cf98",
                          "fontSize": 16,
                        },
                        Object {
                          "color": "#666",
                        },
                        undefined,
                      ]
                    }
                  >
                    Cancel
                  </Text>
                </View>
                <View
                  accessible={true}
                  clickable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "height": 42,
                        "justifyContent": "center",
                        "paddingHorizontal": 20,
                        "position": "absolute",
                        "top": 0,
                      },
                      Object {
                        "right": 0,
                      },
                      undefined,
                    ]
                  }
                >
                  <Text
                    allowFontScaling={true}
                    style={
                      Array [
                        Object {
                          "color": "#46cf98",
                          "fontSize": 16,
                        },
                        undefined,
                      ]
                    }
                  >
                    Confirm
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </Modal>
    </View>
  </View>
</View>
`;

exports[`renders correctly Header 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#F8F8F8",
      "elevation": 2,
      "height": 60,
      "justifyContent": "center",
      "paddingTop": 25,
      "position": "relative",
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 2,
        "width": 0,
      },
      "shadowOpacity": 0.2,
    }
  }
>
  <Text
    style={
      Object {
        "fontSize": 20,
      }
    }
  />
</View>
`;

exports[`renders correctly Input 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "flexDirection": "row",
      "height": 40,
    }
  }
>
  <Text
    style={
      Object {
        "flex": 1,
        "fontSize": 18,
        "paddingLeft": 20,
      }
    }
  />
  <TextInput
    allowFontScaling={true}
    autoCorrect={false}
    keyboardType="default"
    rejectResponderTermination={true}
    style={
      Object {
        "color": "#000",
        "flex": 2,
        "fontSize": 18,
        "lineHeight": 23,
        "paddingLeft": 5,
        "paddingRight": 5,
      }
    }
    underlineColorAndroid="transparent"
  />
</View>
`;

exports[`renders correctly Spinner 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <ActivityIndicator
    animating={true}
    color="#999999"
    hidesWhenStopped={true}
    size="large"
  />
</View>
`;

exports[`renders correctly TextLink 1`] = `
<View
  accessible={true}
  clickable={false}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <Text
    style={
      Object {
        "color": "blue",
      }
    }
  >
    Test
  </Text>
</View>
`;

exports[`renders correctly ToggleButton 1`] = `
<View
  accessible={true}
  clickable={false}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignSelf": "stretch",
      "backgroundColor": "#fff",
      "borderColor": "#007aff",
      "borderRadius": 5,
      "borderWidth": 1,
      "flex": 1,
      "marginLeft": 5,
      "marginRight": 5,
      "opacity": 1,
    }
  }
>
  <Text
    style={
      Object {
        "alignSelf": "center",
        "color": "#007aff",
        "fontSize": 16,
        "fontWeight": "600",
        "paddingBottom": 10,
        "paddingTop": 10,
      }
    }
  >
    Test
  </Text>
</View>
`;
